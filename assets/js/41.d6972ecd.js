(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{275:function(t,a,n){"use strict";n.r(a);var s=n(0),e=Object(s.a)({},function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"fragment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fragment","aria-hidden":"true"}},[t._v("#")]),t._v(" fragment")]),t._v(" "),n("p",[t._v("使用方法")]),t._v(" "),n("p",[t._v("1,静态的")]),t._v(" "),n("p",[t._v("第一步：编写自定义的Fragment,继承Fragment")]),t._v(" "),n("p",[t._v("(android.support.v4.app.Fragment),必须重写onCreateView()")]),t._v(" "),n("p",[t._v('第二步：MainActivity 必须继承的是 FragmentActivity，在 MainActivity 的布局文件中，添加 Fragment 控件，android:name="com.zhidi.test.MyFragment"')]),t._v(" "),n("p",[t._v("在MainActivity中获得MyFragment的对象")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FragmentManager")]),t._v(" fm "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSupportFragmentManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得FragmentManager对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFragment")]),t._v(" mf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFragment")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("fm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("findFragmentById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("R")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获得MyFragment对象")]),t._v("\n")])])]),n("p",[t._v("2,动态的")]),t._v(" "),n("p",[t._v("第一步：编写自定义的 Fragment, 继承 Fragment\n(android.support.v4.app.Fragment), 必须重写 onCreateView()")]),t._v(" "),n("p",[t._v("第二步：在 MainActivity 中 必须继承的是 FragmentActivity")]),t._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FragmentManager")]),t._v(" fm "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSupportFragmentManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获得FragmentManager对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFragment")]),t._v(" mf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//创建MyFragment对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FragmentTransaction")]),t._v(" ft "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("beginTransaction")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//开启事务")]),t._v("\nft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("r"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("yyy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("mf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//添加MyFragment对象到容器，第一个参数是容器的id,mf是MyFragment对象")]),t._v("\nft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addToBackStack")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据项目需求，是否将该对象添加到回退栈")]),t._v("\nft"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//提交事务  ")]),t._v("\n")])])]),n("p",[t._v("注意：事务一旦提交，就不能再次使用，如需再次操作，需重新开启事务")]),t._v(" "),n("h2",{attrs:{id:"fragment-与-activity-之间的通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fragment-与-activity-之间的通信","aria-hidden":"true"}},[t._v("#")]),t._v(" Fragment 与 Activity 之间的通信")]),t._v(" "),n("p",[t._v("第一步：编写自定义的 Fragment, 继承 Fragment\n(android.support.v4.app.Fragment),必须重写onCreateView()")]),t._v(" "),n("p",[t._v("第二步：获取控件对象")]),t._v(" "),n("p",[t._v("第三步：在 MyFragment 中自定义接口 MyInterFace，并且定义一个MyInterFace 类型的全局变量 myin")]),t._v(" "),n("p",[t._v("在接口里定义需要实现的方法  public int  getPosition(int position)")]),t._v(" "),n("p",[t._v("第四步：重写了Fragment的onAttach(Context activity)方法，把Activity强转为MyInterFace类型对象，并赋值给myin")]),t._v(" "),n("p",[t._v("myin = (MyInterface)activity ;")]),t._v(" "),n("p",[t._v("第五步：在MainActivity中，继承FragmentActivity 实现 MyInterface接口")]),t._v(" "),n("p",[t._v("重写getPosition方法")]),t._v(" "),n("p",[t._v("第六步：在MyFragment的控件的点击事件中调用myin的getPosition方法，将int position传值给myin")]),t._v(" "),n("p",[t._v("补充 Fragment与fragment 之间的通信")]),t._v(" "),n("p",[t._v("第七步：在另一个自定义的Fragment中定义相应方法 SecondFragment")]),t._v(" "),n("p",[t._v("第八步：在MainActivity中获得SecondFragment 的对象")]),t._v(" "),n("p",[t._v("第九步：在getposition方法中调用SecondFragment中的xxxx()方法")])])},[],!1,null,null,null);a.default=e.exports}}]);