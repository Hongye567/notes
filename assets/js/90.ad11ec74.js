(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{328:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"异常（exception）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常（exception）","aria-hidden":"true"}},[t._v("#")]),t._v(" 异常（Exception）")]),t._v(" "),s("p",[t._v("在 java 程序编译或运行时产生的意外的情况")]),t._v(" "),s("h3",{attrs:{id:"异常的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常的分类","aria-hidden":"true"}},[t._v("#")]),t._v(" 异常的分类")]),t._v(" "),s("ol",[s("li",[t._v("编译时异常")])]),t._v(" "),s("p",[t._v("必须处理")]),t._v(" "),s("p",[t._v("Exception 下除了 RunntimeException 之外的其他类")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("运行时异常")])]),t._v(" "),s("p",[t._v("可以处理，也可以不处理")]),t._v(" "),s("p",[t._v("RunntimeException 及 其子类")]),t._v(" "),s("h3",{attrs:{id:"常见的运行时异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的运行时异常","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见的运行时异常")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("空指针异常")])]),t._v(" "),s("li",[s("p",[t._v("算术异常")])]),t._v(" "),s("li",[s("p",[t._v("数组下标越界异常")])]),t._v(" "),s("li",[s("p",[t._v("类型转换异常")])]),t._v(" "),s("li",[s("p",[t._v("解析异常")])])]),t._v(" "),s("h3",{attrs:{id:"异常的处理方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异常的处理方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 异常的处理方式")]),t._v(" "),s("ol",[s("li",[t._v("捕捉并处理")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t可能出现异常的代码块\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("异常类名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t处理的代码\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("异常类名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t处理的代码\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t永远都会执行的语句块\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("注意：多个 catch 语句时，异常的顺序是从小到大")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("抛出异常")])]),t._v(" "),s("p",[t._v("在方法之后使用 throws  来抛出异常")]),t._v(" "),s("p",[t._v("区别：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("捕捉并处理异常只处理一次，以后再调用不在处理")])]),t._v(" "),s("li",[s("p",[t._v("抛出异常，在以后的使用中需要再次处理")])])]),t._v(" "),s("h3",{attrs:{id:"自定义异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义异常","aria-hidden":"true"}},[t._v("#")]),t._v(" 自定义异常")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("继承 Exception")])]),t._v(" "),s("li",[s("p",[t._v("定义一个普通的类，来继承 Exception")])]),t._v(" "),s("li",[s("p",[t._v("在该类中定义一个无参的构造器和一个有参的构造器；")])])]),t._v(" "),s("pre",[s("code",[t._v("无参的构造器调用有参的，有参的构造器调用父类有参的构造器\n")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("在使用时，先在方法中抛出该异常，然后再使用throw new 自定义异常类()")])]),t._v(" "),s("li",[s("p",[t._v("继承 RuntimeException")])]),t._v(" "),s("li",[s("p",[t._v("定义一个普通的类，来继承 RuntimeException")])]),t._v(" "),s("li",[s("p",[t._v("在该类中定义一个无参的构造器和一个有参的构造器；")])])]),t._v(" "),s("pre",[s("code",[t._v("无参的构造器调用有参的，有参的构造器调用父类有参的构造器\n")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("在使用时，直接使用 throw new 自定义异常类()")])])])},[],!1,null,null,null);a.default=e.exports}}]);